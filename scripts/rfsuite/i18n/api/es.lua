--[[
 * Copyright (C) Rotorflight Project
 *
 * License GPLv3: https://www.gnu.org/licenses/gpl-3.0.en.html
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * Note. Some icons have been sourced from https://www.flaticon.com/
]] --

local es = {
    ACC_TRIM = {
        pitch = "Utilice para corregir si el heli deriva en uno de los modos estabilizados (ángulo, horizonte, etc.).",
        roll = "Utilice para corregir si el heli deriva en uno de los modos estabilizados (ángulo, horizonte, etc.).",
    },
    BATTERY_CONFIG = {
        batteryCapacity = "La capacidad de su batería en miliamper-hora.",
        batteryCellCount = "El número de celdas de su batería.",
        vbatmincellvoltage = "El voltaje mínimo por celda al cual se dispara la alarma de bajo voltaje.",
        vbatmaxcellvoltage = "El voltaje máximo por celda al cual se dispara la alarma de voltaje alto.",
        vbatfullcellvoltage = "El voltaje nominal de una celda totalmente cargada.",
        vbatwarningcellvoltage = "El voltaje por celda a partir del cual empieza a sonar la alarma de bajo voltaje.",
    },
    ESC_SENSOR_CONFIG  = {
        half_duplex = "Modo half-duplex para telemetría del ESC",
        update_hz = "Tasa de refresco de telemetría del ESC",
        current_offset = "Ajuste del sensor de corriente",
        hw4_current_offset = "Ajuste de corriente del Hobbywing v4",
        hw4_current_gain = "Ajuste de ganancia de corriente del Hobbywing v4",
        hw4_voltage_gain = "Ajuste de ganancia de voltaje del Hobbywing v4",
        pin_swap = "Intercambio de pines TX y RX para telemetría del ESC",
        voltage_correction = "Ajuste la corrección de voltaje",
        current_correction = "Ajuste la corrección de corriente",
        consumption_correction = "Ajuste la corrección de consumo",
        tbl_on = "Encendido",
        tbl_off = "Apagado",
    },
    FILTER_CONFIG = {
        gyro_lpf1_static_hz = "Frecuencia de corte del filtro pasabajos en Hz.",
        gyro_lpf2_static_hz = "Frecuencia de corte del filtro pasabajos en Hz.",
        gyro_soft_notch_hz_1 = "Frecuencia central aplicada al punto.",
        gyro_soft_notch_cutoff_1 = "Ancho del filtro para el punto en Hz.",
        gyro_soft_notch_hz_2 = "Frecuencia central aplicada al punto.",
        gyro_soft_notch_cutoff_2 = "Ancho del filtro para el punto en Hz.",
        gyro_lpf1_dyn_min_hz = "Corte mín del filtro dinámico en Hz.",
        gyro_lpf1_dyn_max_hz = "Corte máx del filtro dinámico en Hz."
    },
    GOVERNOR_CONFIG = {
        gov_startup_time = "Constante de tiempo para inicio lento, en segundos, midiendo desde cero hasta la velocidad máxima del rotor.",
        gov_spoolup_time = "Constante de tiempo para arranque lento, en segundos, midiendo desde cero hasta la velocidad máxima del rotor.",
        gov_tracking_time = "Constante de tiempo para cambios de velocidad del rotor, en segundos, midiendo desde cero hasta la velocidad máxima del rotor.",
        gov_recovery_time = "Constante de tiempo para aceleración de recuperación, en segundos, midiendo desde cero hasta la velocidad máxima del rotor.",
        gov_handover_throttle = "El governor se activa por encima de este %. Por debajo de este valor la posición del acelerador se transfiere directamente al ESC.",
        gov_spoolup_min_throttle = "Posición mínima del acelerador para arranque lento, en porcentaje. Para motores eléctricos el valor por defecto es 5%, para nitro este valor debería hacer que el embrague empiece a acoplarse para un arranque suave 10-15%.",           
        tbl_govmode_off = "APAGADO", 
        tbl_govmode_passthrough = "SALTEAR",
        tbl_govmode_standard = "ESTANDAR",
        tbl_govmode_mode1 = "MODO1",
        tbl_govmode_mode2 = "MODO2",
    },
    GOVERNOR_PROFILE = {
        governor_headspeed = "Velocidad del rotor deseada para el perfil en uso.",
        governor_gain = "Ganancia del loop PID maestro.",
        governor_p_gain = "Ganancia P-term del loop PID.",
        governor_i_gain = "Ganancia I-term del loop PID.",
        governor_d_gain = "Ganancia D-term del loop PID.",
        governor_f_gain = "Ganancia de avance (FF).",
        governor_tta_gain = "Ganancia TTA aplicada para incrementar la velocidad del rotor para controlar la cola en dirección negativa (ej: la cola motorizada a velocidad menor que ralentí).",
        governor_tta_limit = "Máximo incremento TTA por encima de la velocidad máxima del rotor.",
        governor_yaw_ff_weight = "Precompensación de rotación - cuanta rotación se mezcla con el avance (feedforward).",
        governor_cyclic_ff_weight = "Precompensación de cíclico - cuanto cíclico se mezcla con el avance (feedforward).",
        governor_collective_ff_weight = "Precompensación de colectivo - cuanto colectivo se mezcla con el avance (feedforward).",
        governor_max_throttle = "Salida máxima de acelerador que se le permite usar al governor.",
        governor_min_throttle = "Salida mínima de acelerador que se le permite usar al governor."
    },
    MIXER_CONFIG = {
        tail_motor_idle = "Señal mínima de acelerador que se envía al motor de cola. Debería configurarse lo suficientemente alta para que no se detenga el motor.",
        tail_center_trim = "Define el ajuste de cola para rotación 0 en paso variable, o acelerador del motor para rotación 0 en cola motorizada.",
        swash_phase = "Compensación de fase para controles del swashplate.",
        swash_pitch_limit = "Valor máximo del ángulo combinado de cíclico y colectivo en las palas.",
        swash_trim_0 = "Ajuste para nivelar el swashplate cuando se utilizan brazos no extensibles.",
        swash_trim_1 = "Ajuste para nivelar el swashplate cuando se utilizan brazos no extensibles.",
        swash_trim_2 = "Ajuste para nivelar el swashplate cuando se utilizan brazos no extensibles.",
        swash_tta_precomp = "Precompensación de mezclador para rotación 0.",
        swash_geo_correction = "Ajuste si hay demasiado colectivo negativo o positivo.",
        collective_tilt_correction_pos = "Ajuste la escala de corrección de inclinación del colectivo para paso posivo.",
        collective_tilt_correction_neg = "Ajuste la escala de corrección de inclinación del colectivo para paso negativo",
        tbl_cw = "Horario CW",
        tbl_ccw = "Antihorario CCW",
    },
    MOTOR_CONFIG = {
        minthrottle = "Este valor PWM se envía al ESC/Servo cuando el acelerador está bajo",
        maxthrottle = "Este valor PWM se envía al ESC/Servo cuando el acelerador está a fondo",
        mincommand = "Este valor PWM se envía cuando el motor está detenido",
        motor_pwm_protocol = "El protcolo utilizado para comunicarse con el ESC",
        motor_pwm_rate = "La frecuencia de refresco en Hz de la señal PWM del ESC",
        motor_pole_count_0 = "El número de imanes en la campana del motor.",
        main_rotor_gear_ratio_0 = "Número de dientes del piñón del motor",
        main_rotor_gear_ratio_1 = "Número de dientes del engranaje principal",
        tail_rotor_gear_ratio_0 = "Número de dientes del del engranaje de cola",
        tail_rotor_gear_ratio_1 = "Número de dientes del engranaje de autorotación"
    },
    PID_PROFILE = {
        error_decay_time_ground = "Alivio del error actual del controlador cuando la aeronave está en tierra, para evitar que se vuelque.",
        error_decay_time_cyclic = "Constante de tiempo para el alivio del I-term del cíclico. Valores más altos estabilizan el sobrevuelo, valores menores producen deriva.",
        error_decay_limit_cyclic = "Velocidad máxima de alivio del I-term para cíclico.",
        error_rotation = "Rota los valores actuales de rolido y cabeceo alrededor del eje de rotación vertical mientras el heli está girando. Este término se suele llamar Compensación Piro (de pirueta).",
        error_limit_0 = "Límite duro del error de ángulo en el loop PID. Es el error absoluto y por lo tanto el I-term nunca superará estos límites.",
        error_limit_1 = "Límite duro del error de ángulo en el loop PID. Es el error absoluto y por lo tanto el I-term nunca superará estos límites.",
        error_limit_2 = "Límite duro del error de ángulo en el loop PID. Es el error absoluto y por lo tanto el I-term nunca superará estos límites.",
        gyro_cutoff_0 = "Ancho de banda general para el loop PID en Hz.",
        gyro_cutoff_1 = "Ancho de banda general para el loop PID en Hz.",
        gyro_cutoff_2 = "Ancho de banda general para el loop PID en Hz.",
        dterm_cutoff_0 = "Corte D-term en Hz.",
        dterm_cutoff_1 = "Corte D-term en Hz.",
        dterm_cutoff_2 = "Corte D-term en Hz.",
        iterm_relax_type = "Seleccione los ejes en los que está activado. RP: Rollido, Cabeceo. RPY: Rolido, Cabeceo, Rotación.",
        iterm_relax_cutoff_0 = "Ayuda a reducir el rebote luego de movimientos rápidos del joystick. Puede causar inconsistencias en movimientos pequeños si está demasiado bajo.",
        iterm_relax_cutoff_1 = "Ayuda a reducir el rebote luego de movimientos rápidos del joystick. Puede causar inconsistencias en movimientos pequeños si está demasiado bajo.",
        iterm_relax_cutoff_2 = "Ayuda a reducir el rebote luego de movimientos rápidos del joystick. Puede causar inconsistencias en movimientos pequeños si está demasiado bajo.",
        yaw_cw_stop_gain = "Ganancia de detención (PD) para rotación horaria.",
        yaw_ccw_stop_gain = "Ganancia de detención (PD) para rotación antihoraria.",
        yaw_precomp_cutoff = "Límite de frecuencia para todas las acciones de precompensación de rotación.",
        yaw_cyclic_ff_gain = "Avance de cíclico mezclado con rotación (precomp. cíclico-a-rotación).",
        yaw_collective_ff_gain = "Avance de colectivo mezclado con rotación (precomp colectivo-a-rotación).",
        yaw_collective_dynamic_gain = "Aumento precompensación extra de rotación para comandos de colectivo.",
        yaw_collective_dynamic_decay = "Tiempo de decadencia para precompensación extra para comandos de colectivo.",
        pitch_collective_ff_gain = "Incrementarlo compensará el movimiento de cabeceo superior causado por el arrastre de cola al trepar.",
        angle_level_strength = "Determina que tan agresivamente el helicóptero vuelve a horizontal en modo ángulo.",
        angle_level_limit = "Limita el ángulo máximo de inclinación de cabeceo/rolido en modo ángulo.",
        horizon_level_strength = "Determina que tan agresivamente el helicóptero vuelve a horizontal en modo horizonte.",
        trainer_gain = "Determina que tan agresivamente el helicóptero vuelve al ángulo máximo (si se excedió) mientras está en modo Entrenador Acro.",
        trainer_angle_limit = "Limita el ángulo máximo de cabeceo/rolido que alcanzará el helicóptero en modo Entrenador Acro.",
        cyclic_cross_coupling_gain = "Cantidad de compensación aplicada al desacople cabeceo-a-rolido.",
        cyclic_cross_coupling_ratio = "Cantidad de compensación rolido-a-cabeceo necesaria, vs. cabeceo-a-rolido.",
        cyclic_cross_coupling_cutoff = "Límite de frecuenca de la compensación. Un valor mayor acelerará la acción de compensación.",
        offset_limit_0 = "Límite duro del ajuste de ángulo para la Integral de Alta Velocidad (HSI) en el loop PID. El O-term nunca superará estos límites.",
        offset_limit_1 = "Límite duro del ajuste de ángulo para la Integral de Alta Velocidad (HSI) en el loop PID. El O-term nunca superará estos límites.",
        bterm_cutoff_0 = "Corte de B-term en Hz.",
        bterm_cutoff_1 = "Corte de B-term en Hz.",
        bterm_cutoff_2 = "Corte de B-term en Hz.",
        yaw_inertia_precomp_gain = "Ganacia escalar. La fuerza de inercia del rotor principal. Un valor mayor implica mayor precompensación aplicada al control de rotación.",
        yaw_inertia_precomp_cutoff = "Corte. Frecuencia de corte derivada, en pasos de 1/10Hz. Controla que tan duramente se precompensa. Un valor mayor es mas fuerte.",
        tbl_off = "APAGADO",
        tbl_on = "ENCENDIDO",
        tbl_rp = "RP",
        tbl_rpy = "RPY",
    },
    PID_TUNING = {
        pid_0_P = "Que tan estrechamente el sistema persigue el punto deseado.",
        pid_0_I = "Que tan estrechamente el sistema sostiene su posición.",
        pid_0_D = "Fuerza de amortiguación de cualquier movimiento del sistema, incluyendo influencias externas. También reduce el exceso de movimiento (pasarse de largo).",
        pid_0_F = "Ayuda a empujar el P-term en función de la posición del joystick. Aumentarlo hará la respuesta mas fuerte, pero puede causar que se pase de largo.",
    
        pid_1_P = "Que tan estrechamente el sistema persigue el punto deseado.",
        pid_1_I = "Que tan estrechamente el sistema sostiene su posición.",
        pid_1_D = "Fuerza de amortiguación de cualquier movimiento del sistema, incluyendo influencias externas. También reduce el exceso de movimiento (pasarse de largo).",
        pid_1_F = "Ayuda a empujar el P-term en función de la posición del joystick. Aumentarlo hará la respuesta mas fuerte, pero puede causar que se pase de largo.",
    
        pid_2_P = "Que tan estrechamente el sistema persigue el punto deseado.",
        pid_2_I = "Que tan estrechamente el sistema sostiene su posición.",
        pid_2_D = "Fuerza de amortiguación de cualquier movimiento del sistema, incluyendo influencias externas. También reduce el exceso de movimiento (pasarse de largo).",
        pid_2_F = "Ayuda a empujar el P-term en función de la posición del joystick. Aumentarlo hará la respuesta mas fuerte, pero puede causar que se pase de largo.",
    
        pid_0_B = "Aumento adicional de avance para hacer que el heli reaccione más rápidamente ante los movimientos del joystick.",
        pid_1_B = "Aumento adicional de avance para hacer que el heli reaccione más rápidamente ante los movimientos del joystick.",
        pid_2_B = "Aumento adicional de avance para hacer que el heli reaccione más rápidamente ante los movimientos del joystick.",
    
        pid_0_O = "Se utiliza para evitar que la aeronave role cuando se utiliza colectivo alto.",
        pid_1_O = "Se utiliza para evitar que la aeronave cabecee cuando se utiliza colectivo alto."
    },
    RC_CONFIG = {
        rc_center = "Centro del joystick en microsegundos (uS).",
        rc_deflection = "Deflección desde el centro del joystick en microsegundos (uS).",
        rc_arm_throttle = "El acelerador debe estar por debajo de este valor en microsegundos (uS) para permitir el armado. Debe ser al menos 10uS menor que el mínimo del acelerador.",
        rc_min_throttle = "Acelerador mínimo que se espera del radio (salida del acelerador 0%), en microseconds (uS).",
        rc_max_throttle = "Acelerador máximo que se espera del radio (salida del acelerador 100%), en microseconds (uS).",
        rc_deadband = "Zona muerta para control cíclico en microsegundos (uS).",
        rc_yaw_deadband = "Zona muerta para control de rotación sobre su eje en microsegundos (uS)."           
    },
    RC_TUNING = {
        response_time_1 = "Incrementar o decrementar el tiempo de respuesta de la tasa para suavizar los movimientos del heli.",
        accel_limit_1 = "Aceleración máxima de la aeronave en respuesta a un movimiento del joystick.",
        response_time_2 = "Incrementar o decrementar el tiempo de respuesta de la tasa para suavizar los movimientos del heli.",
        accel_limit_2 = "Aceleración máxima de la aeronave en respuesta a un movimiento del joystick.",
        response_time_3 = "Incrementar o decrementar el tiempo de respuesta de la tasa para suavizar los movimientos del heli.",
        accel_limit_3 = "Aceleración máxima de la aeronave en respuesta a un movimiento del joystick.",
        response_time_4 = "Incrementar o decrementar el tiempo de respuesta de la tasa para suavizar los movimientos del heli.",
        accel_limit_4 = "Aceleración máxima de la aeronave en respuesta a un movimiento del joystick."
    },
    RESCUE_PROFILE = {
        rescue_flip_mode = "Si se activa la función rescate mientras está invertido, dar vuelta a vertical - o permanecer invertido.",
        rescue_flip_gain = "Determina que tan agresivamente se da vuelta el heli durante un rescate de invertido.",
        rescue_level_gain = "Determina que tan agresivamente se nivela el heli durante un rescate.",
        rescue_pull_up_time = "Cuando se activa rescate, el helicóptero aplicará colectivo arriba durante este tiempo antes de continuar con inversión o nivelación.",
        rescue_climb_time = "Plazo de tiempo que se aplica colectivo arriba antes de continuar con sobrevuelo.",
        rescue_flip_time = "Si el helicóptero está en rescate e intentando darse vuelta a nivelado y no lo logra en este intervalo de tiempo, se abortará el rescate.",
        rescue_exit_time = "Esto limita la aplicación rápida de colectivo negativo si el helicóptero rotó durante el rescate.",
        rescue_pull_up_collective = "Valor de colectivo para trepada (pull-up).",
        rescue_climb_collective = "Valor de colectivo para trepada de rescate.",
        rescue_hover_collective = "Valor de colectivo para sobrevuelo.",
        rescue_max_setpoint_rate = "Límite de tasa de rolido/cabeceo en rescate. Helicópteros más grandes pueden necesitar menores tasas de rotación.",
        rescue_max_setpoint_accel = "Límite de que tan rápido el helicóptero acelera entrando a un rolido/cabeceo. Helicópteros más grandes pueden necesitar menores tasas de aceleración.",
        tbl_off = "APAGADO",
        tbl_on = "ENCENDIDO",
        tbl_flip = "VOLTEAR",
        tbl_noflip = "NO VOLTEAR",            
    },
    ESC_PARAMETERS_FLYROTOR = {
        throttle_min = "Valor mínimo del acelerador",
        throttle_max = "Valor máximo del acelerador",
        cell_count = "Número de celdas en la batería",
        low_voltage_protection = "Voltaje al cual se disminuye la potencia en un 50%",
        temperature_protection = "Temperatura a la cual se disminuye la potencia en un 50%",
        timing_angle = "Angulo de timing para el motor",
        starting_torque = "Torque de inicio para el motor",
        response_speed = "Velocidad de respuesta para el motor",
        buzzer_volume = "Volumen del Buzzer",
        current_gain = "Valor de ganancia para el sensor actual",
        soft_start = "Valor de inicio suave",
        gov_p = "Valor proporcional para el governor",
        gov_i = "Valor de integral para el governor",
        gov_d = "Valor de derivada para el governor",
        motor_erpm_max = "RPM máxima",
        tbl_extgov = "Governor Externo",
        tbl_escgov = "Governor del ESC",
        tbl_cw = "Horario CW",
        tbl_ccw = "Antihorario CCW",
        tbl_automatic = "Automático",
        tbl_alwayson = "Siempre Encendido",
    },
    ESC_PARAMETERS_HW5 = {
        tbl_fixedwing = "Ala Fija", 
        tbl_heliext   = "Governor Ext Heli", 
        tbl_heligov   = "Governor Heli",
        tbl_helistore = "Guardar Governor Heli",
        tbl_cw = "Horario CW",
        tbl_ccw = "Antihorario CCW",
        tbl_autocalculate = "Cálculo Auto",
        tbl_softcutoff = "Corte Suave",
        tbl_hardcutoff = "Corte Rápido",
        tbl_enabled = "Habilitado",
        tbl_disabled = "Deshabilitado",
        tbl_normal = "Normal",
        tbl_reverse = "Reversa",
        tbl_proportional = "Proporcional",
    },
    ESC_PARAMETERS_SCORPION = {
        tbl_heligov = "Governor Heli", 
        tbl_helistore = "Governor Heli (guardado)", 
        tbl_vbargov = "Governor VBar",
        tbl_extgov = "Governor Externo", 
        tbl_airplane = "Modo Avión",
        tbl_boat = "Modo Barco",
        tbl_quad = "Modo Quad",
        tbl_cw = "Horario CW",
        tbl_ccw = "Antihorario CCW",
        tbl_standard = "Estandar",
        tbl_vbar = "VBar",
        tbl_exbus = "Jeti Exbus",
        tbl_unsolicited = "No Solicitado",
        tbl_futsbus = "SBUS Futaba",
        tbl_on = "Encendido",
        tbl_off = "Apagado",
    },
    ESC_PARAMETERS_XDFLY = {
        tbl_fmheli = "Helicóptero",
        tbl_fmfw = "Ala Fija",
        tbl_cw = "Horario CW",
        tbl_ccw = "Antihorario CCW",
        tbl_low = "Bajo",
        tbl_medium = "Medio",
        tbl_high = "Alto",
        tbl_on = "Encendido",
        tbl_off = "Apagado",
        tbl_red = "ROJO",
        tbl_yellow = "AMARILLO",
        tbl_orange = "NARANJA",
        tbl_green = "VERDE",
        tbl_jadegreen = "VERDE JADE",
        tbl_blue = "AZUL",
        tbl_cyan = "CYAN",
        tbl_purple = "PURPURA",
        tbl_pink = "ROSA",
        tbl_white = "BLANCO",
        tbl_auto = "Auto", 
        tbl_fast = "Rápido", 
        tbl_normal = "Normal", 
        tbl_slow = "Lento", 
        tbl_vslow = "Muy Lento",
        tbl_reverse = "Reversa",
        tbl_escgov = "Governor ESC",
        tbl_extgov = "Governor Externo",
        tbl_fwgov = "Ala Fija"
    },
    ESC_PARAMETERS_YGE = {
        tbl_modefree = "Libre (Atención!)", 
        tbl_modeext = "Governor Ext Heli",
        tbl_modeheli = "Governor Heli",
        tbl_modestore = "Governor Heli guardado",
        tbl_modeglider = "Aero Planeador",
        tbl_modeair = "Aero Motor",
        tbl_modef3a = "Aero F3A",
        tbl_normal = "Normal",
        tbl_smooth = "Suave",
        tbl_reverse = "Reversa",
        tbl_on = "Encendido",
        tbl_off = "Apagado",
        tbl_slowdown = "Desacelerar",
        tbl_cutoff = "Corte",
        tbl_slow = "Lento",
        tbl_medium = "Medio",
        tbl_fast = "Rápido",
        tbl_custom = "Personalizado (Definido por PC)",
        tbl_autonorm = "Auto Normal", 
        tbl_autoefficient = "Auto Eficiente",
        tbl_autopower = "Auto Potencia", 
        tbl_autoextreme = "Auto Extremo",
        tbl_auto = "Auto",
        tbl_unused = "*no se usa*",
        tbl_alwayson = "Siempre encendido",
    }       
}

return es