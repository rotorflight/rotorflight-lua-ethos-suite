name: Release

on:
  push:
    tags:
      - 'release/*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # e.g. tag "release/1.2.3-rc1" -> GIT_VER="1.2.3-rc1"
      GIT_VER: ${{ github.ref_name }}
      GIT_TAG: ${{ github.ref_name }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set build variables
        run: |
          GIT_VER=${GITHUB_REF##*/}
          GIT_TAG=${GITHUB_REF##refs/tags/}
          if [[ ${GIT_VER} =~ ^[0-9]+\.[0-9]+\.[0-9]+-[A-Za-z0-9]+ ]]; then
            GH_TYPE='Release Candidate'
          else
            GH_TYPE='Release'
          fi
          echo "GIT_VER=${GIT_VER}" >> ${GITHUB_ENV}
          echo "GIT_TAG=${GIT_TAG}" >> ${GITHUB_ENV}
          echo "GH_TYPE=${GH_TYPE}" >> ${GITHUB_ENV}

      - name: Inject version info into main.lua
        run: |
          # Parse GIT_VER into components
          IFS='.-' read -r MAJOR MINOR REVISION SUFFIX <<< "${{ env.GIT_VER }}"
          echo "Parsed version: $MAJOR $MINOR $REVISION $SUFFIX"
          # Update config.version
          sed -i "s/config.version = {.*}/config.version = {major = $MAJOR, minor = $MINOR, revision = $REVISION, suffix = '$SUFFIX'}/" scripts/rfsuite/main.lua
          # Verify
          grep 'config.version' scripts/rfsuite/main.lua

      - name: Package combined soundpack
        run: |
          SOUND_DIR="bin/sound-generator/soundpack"
          OUTPUT_DIR="${GITHUB_WORKSPACE}/tmp"
          mkdir -p "$OUTPUT_DIR"
          ZIP_NAME="rotorflight-lua-ethos-suite-soundpack-${{ env.GIT_VER }}.zip"
          (cd "$SOUND_DIR" && zip -r "$OUTPUT_DIR/$ZIP_NAME" .)
          echo "âœ… Created $OUTPUT_DIR/$ZIP_NAME"

      - name: Upload soundpack artifact
        uses: actions/upload-artifact@v4
        with:
          name: rotorflight-lua-ethos-suite-soundpack-${{ env.GIT_VER }}
          path: tmp/*.zip

      - name: Make release package
        run: |
          zip -q -r -9 "rotorflight-lua-ethos-suite-${{ env.GIT_VER }}.zip" scripts/rfsuite

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          .github/scripts/extract-release-notes.py "${{ env.GIT_VER }}" Releases.md > Notes.md
          gh release create "${{ env.GIT_TAG }}" \
            --notes-file Notes.md \
            --title "Rotorflight Lua Suite for Ethos - ${{ env.GH_TYPE }} ${{ env.GIT_VER }}" \
            rotorflight-lua-ethos-suite-${{ env.GIT_VER }}.zip \
            tmp/rotorflight-lua-ethos-suite-soundpack-${{ env.GIT_VER }}.zip
