name: Create rfsuite-lua-ethos ZIP on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  create-zip:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set build variables (PR version)
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        echo "GIT_VER=PR-${PR_NUMBER}" >> $GITHUB_ENV

    - name: Update version and config in main.lua
      run: |
        # Use GIT_VER set in previous step
        sed -i 's/\(config.version = {[^}]*suffix = \)"[^"]*"/\1"${{ env.GIT_VER }}"/' scripts/rfsuite/main.lua

        # Show updated file (for verification)
        grep 'config\.' scripts/rfsuite/main.lua

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        cache: npm

    - name: Install luamin
      run: npm install -g luamin

    - name: Add local node_modules to PATH
      run: echo "${{ github.workspace }}/node_modules/.bin" >> $GITHUB_PATH

    - name: locate any luamin binary on disk
      shell: bash
      run: |
        echo "→ Searching for luamin across entire filesystem (this will take a bit)…"
        sudo find / \
          -type f \( -iname 'luamin' -o -iname '*luamin*' \) \
          -executable -print 2>/dev/null || true

    - name: Minify Lua scripts
      run: |
        echo "→ Minifying with luamin…"
        find scripts/ -type f -name '*.lua' -print \
          | while read -r file; do
              echo "[CI] Minifying $file"
              luamin -f "$file" > "${file}.tmp"
              mv "${file}.tmp" "$file"
            done

    - name: Create rotorflight-lua-ethos-suite-PR-<number>.zip
      run: |
        zip -q -r -9 "rotorflight-lua-ethos-suite-${{ env.GIT_VER }}.zip" scripts

    - name: Upload rotorflight-lua-ethos-suite-PR-<number>.zip as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: rotorflight-lua-ethos-suite-${{ env.GIT_VER }}
        path: rotorflight-lua-ethos-suite-${{ env.GIT_VER }}.zip
        if-no-files-found: error

    - name: Package combined soundpack
      run: |
        # Where your per-locale packs live
        SOUND_DIR="bin/sound-generator/soundpack"

        # Where to drop the ZIP
        OUTPUT_DIR="${GITHUB_WORKSPACE}/tmp"
        mkdir -p "$OUTPUT_DIR"

        # Name it with your GIT_VER (e.g. PR-936 or 1.2.3)
        ZIP_NAME="rotorflight-lua-ethos-suite-soundpack-${{ env.GIT_VER }}.zip"

        # Zip up everything under SOUND_DIR, preserving locale/pack/... structure
        (cd "$SOUND_DIR" && zip -r "$OUTPUT_DIR/$ZIP_NAME" .)

        echo "✅ Created $OUTPUT_DIR/$ZIP_NAME"

    - name: Upload soundpack artifact
      uses: actions/upload-artifact@v4
      with:
        name: rotorflight-lua-ethos-suite-soundpack-${{ env.GIT_VER }}
        path: tmp/*.zip

     