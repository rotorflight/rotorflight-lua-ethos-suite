name: Create rfsuite-lua-ethos ZIP on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  create-zip:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set build variables (PR version)
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        echo "GIT_VER=PR-${PR_NUMBER}" >> $GITHUB_ENV

    - name: Update version and config in main.lua
      run: |
        # Use GIT_VER set in previous step
        sed -i 's/\(config.version = {[^}]*suffix = \)"[^"]*"/\1"${{ env.GIT_VER }}"/' scripts/rfsuite/main.lua

        # Show updated file (for verification)
        grep 'config\.' scripts/rfsuite/main.lua

    - name: Setup Node.js & cache deps
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install luamin
      run: npm install -g luamin

    - name: Locate luamin binary
      id: locate-luamin
      run: |
        echo "🔍 Searching for luamin binary on the filesystem…"
        LUAMIN_PATH=$(find /opt/hostedtoolcache/node/ -type f -name luamin -executable -path "*/luamin/bin/luamin" 2>/dev/null | head -n1)
        if [ -z "$LUAMIN_PATH" ]; then
          echo "::error::Could not find luamin binary on the filesystem"
          exit 1
        fi
        echo "✅ Found luamin at $LUAMIN_PATH"
        echo "luamin_path=$LUAMIN_PATH" >> $GITHUB_OUTPUT

    - name: Set LUAMIN path
      id: luamin_path
      run: |
        echo "LUAMIN=$(which luamin)" >> "$GITHUB_OUTPUT"

    - name: Confirm luamin path
      run: echo "LUAMIN path = ${{ steps.luamin_path.outputs.LUAMIN }}"

    - name: Minify Lua files with working directory fix
      run: |
        echo "Using LUAMIN = $LUAMIN"
        find "$(pwd)/scripts" -type f -name '*.lua' -print0 | while IFS= read -r -d '' file; do
          echo "Minifying: $file"
          DIR=$(dirname "$file")
          BASENAME=$(basename "$file")
          TMPFILE=$(mktemp)

          (
            cd "$DIR" || exit 1
            if "$LUAMIN" -f "$BASENAME" > "$TMPFILE" 2>err.txt; then
              mv "$TMPFILE" "$BASENAME"
            else
              echo "[ERROR] Failed to minify $file"
              echo "--- stderr ---"
              cat err.txt
              echo "---"
              rm -f "$TMPFILE" err.txt
              exit 1
            fi
          )
        done
      env:
        LUAMIN: ${{ steps.luamin_path.outputs.LUAMIN }}


    - name: Create rotorflight-lua-ethos-suite-PR-<number>.zip
      run: |
        zip -q -r -9 "rotorflight-lua-ethos-suite-${{ env.GIT_VER }}.zip" scripts

    - name: Upload rotorflight-lua-ethos-suite-PR-<number>.zip as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: rotorflight-lua-ethos-suite-${{ env.GIT_VER }}
        path: rotorflight-lua-ethos-suite-${{ env.GIT_VER }}.zip
        if-no-files-found: error

    - name: Package combined soundpack
      run: |
        # Where your per-locale packs live
        SOUND_DIR="bin/sound-generator/soundpack"

        # Where to drop the ZIP
        OUTPUT_DIR="${GITHUB_WORKSPACE}/tmp"
        mkdir -p "$OUTPUT_DIR"

        # Name it with your GIT_VER (e.g. PR-936 or 1.2.3)
        ZIP_NAME="rotorflight-lua-ethos-suite-soundpack-${{ env.GIT_VER }}.zip"

        # Zip up everything under SOUND_DIR, preserving locale/pack/... structure
        (cd "$SOUND_DIR" && zip -r "$OUTPUT_DIR/$ZIP_NAME" .)

        echo "✅ Created $OUTPUT_DIR/$ZIP_NAME"

    - name: Upload soundpack artifact
      uses: actions/upload-artifact@v4
      with:
        name: rotorflight-lua-ethos-suite-soundpack-${{ env.GIT_VER }}
        path: tmp/*.zip

     